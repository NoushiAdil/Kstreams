/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.services.streamsDemo.avro.schema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class EmpFullDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5108559128898890611L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EmpFullDetails\",\"namespace\":\"com.services.streamsDemo.avro.schema\",\"fields\":[{\"name\":\"empId\",\"type\":\"int\",\"default\":-1},{\"name\":\"firstName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"age\",\"type\":\"float\",\"default\":-100.0},{\"name\":\"sex\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"houseName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"streetName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"city\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"postcode\",\"type\":\"float\",\"default\":-100.0},{\"name\":\"district\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"country\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"vehicleNumber\",\"type\":\"float\",\"default\":-100.0},{\"name\":\"vehicleName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"insuranceDetails\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"manufacturingYear\",\"type\":\"float\",\"default\":-100.0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EmpFullDetails> ENCODER =
      new BinaryMessageEncoder<EmpFullDetails>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EmpFullDetails> DECODER =
      new BinaryMessageDecoder<EmpFullDetails>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<EmpFullDetails> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<EmpFullDetails> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EmpFullDetails>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this EmpFullDetails to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a EmpFullDetails from a ByteBuffer. */
  public static EmpFullDetails fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int empId;
  @Deprecated public java.lang.CharSequence firstName;
  @Deprecated public java.lang.CharSequence lastName;
  @Deprecated public float age;
  @Deprecated public java.lang.CharSequence sex;
  @Deprecated public java.lang.CharSequence houseName;
  @Deprecated public java.lang.CharSequence streetName;
  @Deprecated public java.lang.CharSequence city;
  @Deprecated public float postcode;
  @Deprecated public java.lang.CharSequence district;
  @Deprecated public java.lang.CharSequence state;
  @Deprecated public java.lang.CharSequence country;
  @Deprecated public float vehicleNumber;
  @Deprecated public java.lang.CharSequence vehicleName;
  @Deprecated public java.lang.CharSequence insuranceDetails;
  @Deprecated public float manufacturingYear;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EmpFullDetails() {}

  /**
   * All-args constructor.
   * @param empId The new value for empId
   * @param firstName The new value for firstName
   * @param lastName The new value for lastName
   * @param age The new value for age
   * @param sex The new value for sex
   * @param houseName The new value for houseName
   * @param streetName The new value for streetName
   * @param city The new value for city
   * @param postcode The new value for postcode
   * @param district The new value for district
   * @param state The new value for state
   * @param country The new value for country
   * @param vehicleNumber The new value for vehicleNumber
   * @param vehicleName The new value for vehicleName
   * @param insuranceDetails The new value for insuranceDetails
   * @param manufacturingYear The new value for manufacturingYear
   */
  public EmpFullDetails(java.lang.Integer empId, java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.lang.Float age, java.lang.CharSequence sex, java.lang.CharSequence houseName, java.lang.CharSequence streetName, java.lang.CharSequence city, java.lang.Float postcode, java.lang.CharSequence district, java.lang.CharSequence state, java.lang.CharSequence country, java.lang.Float vehicleNumber, java.lang.CharSequence vehicleName, java.lang.CharSequence insuranceDetails, java.lang.Float manufacturingYear) {
    this.empId = empId;
    this.firstName = firstName;
    this.lastName = lastName;
    this.age = age;
    this.sex = sex;
    this.houseName = houseName;
    this.streetName = streetName;
    this.city = city;
    this.postcode = postcode;
    this.district = district;
    this.state = state;
    this.country = country;
    this.vehicleNumber = vehicleNumber;
    this.vehicleName = vehicleName;
    this.insuranceDetails = insuranceDetails;
    this.manufacturingYear = manufacturingYear;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return empId;
    case 1: return firstName;
    case 2: return lastName;
    case 3: return age;
    case 4: return sex;
    case 5: return houseName;
    case 6: return streetName;
    case 7: return city;
    case 8: return postcode;
    case 9: return district;
    case 10: return state;
    case 11: return country;
    case 12: return vehicleNumber;
    case 13: return vehicleName;
    case 14: return insuranceDetails;
    case 15: return manufacturingYear;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: empId = (java.lang.Integer)value$; break;
    case 1: firstName = (java.lang.CharSequence)value$; break;
    case 2: lastName = (java.lang.CharSequence)value$; break;
    case 3: age = (java.lang.Float)value$; break;
    case 4: sex = (java.lang.CharSequence)value$; break;
    case 5: houseName = (java.lang.CharSequence)value$; break;
    case 6: streetName = (java.lang.CharSequence)value$; break;
    case 7: city = (java.lang.CharSequence)value$; break;
    case 8: postcode = (java.lang.Float)value$; break;
    case 9: district = (java.lang.CharSequence)value$; break;
    case 10: state = (java.lang.CharSequence)value$; break;
    case 11: country = (java.lang.CharSequence)value$; break;
    case 12: vehicleNumber = (java.lang.Float)value$; break;
    case 13: vehicleName = (java.lang.CharSequence)value$; break;
    case 14: insuranceDetails = (java.lang.CharSequence)value$; break;
    case 15: manufacturingYear = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'empId' field.
   * @return The value of the 'empId' field.
   */
  public java.lang.Integer getEmpId() {
    return empId;
  }

  /**
   * Sets the value of the 'empId' field.
   * @param value the value to set.
   */
  public void setEmpId(java.lang.Integer value) {
    this.empId = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }

  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }

  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return The value of the 'age' field.
   */
  public java.lang.Float getAge() {
    return age;
  }

  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(java.lang.Float value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'sex' field.
   * @return The value of the 'sex' field.
   */
  public java.lang.CharSequence getSex() {
    return sex;
  }

  /**
   * Sets the value of the 'sex' field.
   * @param value the value to set.
   */
  public void setSex(java.lang.CharSequence value) {
    this.sex = value;
  }

  /**
   * Gets the value of the 'houseName' field.
   * @return The value of the 'houseName' field.
   */
  public java.lang.CharSequence getHouseName() {
    return houseName;
  }

  /**
   * Sets the value of the 'houseName' field.
   * @param value the value to set.
   */
  public void setHouseName(java.lang.CharSequence value) {
    this.houseName = value;
  }

  /**
   * Gets the value of the 'streetName' field.
   * @return The value of the 'streetName' field.
   */
  public java.lang.CharSequence getStreetName() {
    return streetName;
  }

  /**
   * Sets the value of the 'streetName' field.
   * @param value the value to set.
   */
  public void setStreetName(java.lang.CharSequence value) {
    this.streetName = value;
  }

  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public java.lang.CharSequence getCity() {
    return city;
  }

  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'postcode' field.
   * @return The value of the 'postcode' field.
   */
  public java.lang.Float getPostcode() {
    return postcode;
  }

  /**
   * Sets the value of the 'postcode' field.
   * @param value the value to set.
   */
  public void setPostcode(java.lang.Float value) {
    this.postcode = value;
  }

  /**
   * Gets the value of the 'district' field.
   * @return The value of the 'district' field.
   */
  public java.lang.CharSequence getDistrict() {
    return district;
  }

  /**
   * Sets the value of the 'district' field.
   * @param value the value to set.
   */
  public void setDistrict(java.lang.CharSequence value) {
    this.district = value;
  }

  /**
   * Gets the value of the 'state' field.
   * @return The value of the 'state' field.
   */
  public java.lang.CharSequence getState() {
    return state;
  }

  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(java.lang.CharSequence value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'country' field.
   * @return The value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'vehicleNumber' field.
   * @return The value of the 'vehicleNumber' field.
   */
  public java.lang.Float getVehicleNumber() {
    return vehicleNumber;
  }

  /**
   * Sets the value of the 'vehicleNumber' field.
   * @param value the value to set.
   */
  public void setVehicleNumber(java.lang.Float value) {
    this.vehicleNumber = value;
  }

  /**
   * Gets the value of the 'vehicleName' field.
   * @return The value of the 'vehicleName' field.
   */
  public java.lang.CharSequence getVehicleName() {
    return vehicleName;
  }

  /**
   * Sets the value of the 'vehicleName' field.
   * @param value the value to set.
   */
  public void setVehicleName(java.lang.CharSequence value) {
    this.vehicleName = value;
  }

  /**
   * Gets the value of the 'insuranceDetails' field.
   * @return The value of the 'insuranceDetails' field.
   */
  public java.lang.CharSequence getInsuranceDetails() {
    return insuranceDetails;
  }

  /**
   * Sets the value of the 'insuranceDetails' field.
   * @param value the value to set.
   */
  public void setInsuranceDetails(java.lang.CharSequence value) {
    this.insuranceDetails = value;
  }

  /**
   * Gets the value of the 'manufacturingYear' field.
   * @return The value of the 'manufacturingYear' field.
   */
  public java.lang.Float getManufacturingYear() {
    return manufacturingYear;
  }

  /**
   * Sets the value of the 'manufacturingYear' field.
   * @param value the value to set.
   */
  public void setManufacturingYear(java.lang.Float value) {
    this.manufacturingYear = value;
  }

  /**
   * Creates a new EmpFullDetails RecordBuilder.
   * @return A new EmpFullDetails RecordBuilder
   */
  public static com.services.streamsDemo.avro.schema.EmpFullDetails.Builder newBuilder() {
    return new com.services.streamsDemo.avro.schema.EmpFullDetails.Builder();
  }

  /**
   * Creates a new EmpFullDetails RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EmpFullDetails RecordBuilder
   */
  public static com.services.streamsDemo.avro.schema.EmpFullDetails.Builder newBuilder(com.services.streamsDemo.avro.schema.EmpFullDetails.Builder other) {
    return new com.services.streamsDemo.avro.schema.EmpFullDetails.Builder(other);
  }

  /**
   * Creates a new EmpFullDetails RecordBuilder by copying an existing EmpFullDetails instance.
   * @param other The existing instance to copy.
   * @return A new EmpFullDetails RecordBuilder
   */
  public static com.services.streamsDemo.avro.schema.EmpFullDetails.Builder newBuilder(com.services.streamsDemo.avro.schema.EmpFullDetails other) {
    return new com.services.streamsDemo.avro.schema.EmpFullDetails.Builder(other);
  }

  /**
   * RecordBuilder for EmpFullDetails instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EmpFullDetails>
    implements org.apache.avro.data.RecordBuilder<EmpFullDetails> {

    private int empId;
    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private float age;
    private java.lang.CharSequence sex;
    private java.lang.CharSequence houseName;
    private java.lang.CharSequence streetName;
    private java.lang.CharSequence city;
    private float postcode;
    private java.lang.CharSequence district;
    private java.lang.CharSequence state;
    private java.lang.CharSequence country;
    private float vehicleNumber;
    private java.lang.CharSequence vehicleName;
    private java.lang.CharSequence insuranceDetails;
    private float manufacturingYear;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.services.streamsDemo.avro.schema.EmpFullDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.empId)) {
        this.empId = data().deepCopy(fields()[0].schema(), other.empId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.age)) {
        this.age = data().deepCopy(fields()[3].schema(), other.age);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sex)) {
        this.sex = data().deepCopy(fields()[4].schema(), other.sex);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.houseName)) {
        this.houseName = data().deepCopy(fields()[5].schema(), other.houseName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.streetName)) {
        this.streetName = data().deepCopy(fields()[6].schema(), other.streetName);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.city)) {
        this.city = data().deepCopy(fields()[7].schema(), other.city);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.postcode)) {
        this.postcode = data().deepCopy(fields()[8].schema(), other.postcode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.district)) {
        this.district = data().deepCopy(fields()[9].schema(), other.district);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.state)) {
        this.state = data().deepCopy(fields()[10].schema(), other.state);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.country)) {
        this.country = data().deepCopy(fields()[11].schema(), other.country);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.vehicleNumber)) {
        this.vehicleNumber = data().deepCopy(fields()[12].schema(), other.vehicleNumber);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.vehicleName)) {
        this.vehicleName = data().deepCopy(fields()[13].schema(), other.vehicleName);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.insuranceDetails)) {
        this.insuranceDetails = data().deepCopy(fields()[14].schema(), other.insuranceDetails);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.manufacturingYear)) {
        this.manufacturingYear = data().deepCopy(fields()[15].schema(), other.manufacturingYear);
        fieldSetFlags()[15] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing EmpFullDetails instance
     * @param other The existing instance to copy.
     */
    private Builder(com.services.streamsDemo.avro.schema.EmpFullDetails other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.empId)) {
        this.empId = data().deepCopy(fields()[0].schema(), other.empId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.age)) {
        this.age = data().deepCopy(fields()[3].schema(), other.age);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sex)) {
        this.sex = data().deepCopy(fields()[4].schema(), other.sex);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.houseName)) {
        this.houseName = data().deepCopy(fields()[5].schema(), other.houseName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.streetName)) {
        this.streetName = data().deepCopy(fields()[6].schema(), other.streetName);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.city)) {
        this.city = data().deepCopy(fields()[7].schema(), other.city);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.postcode)) {
        this.postcode = data().deepCopy(fields()[8].schema(), other.postcode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.district)) {
        this.district = data().deepCopy(fields()[9].schema(), other.district);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.state)) {
        this.state = data().deepCopy(fields()[10].schema(), other.state);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.country)) {
        this.country = data().deepCopy(fields()[11].schema(), other.country);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.vehicleNumber)) {
        this.vehicleNumber = data().deepCopy(fields()[12].schema(), other.vehicleNumber);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.vehicleName)) {
        this.vehicleName = data().deepCopy(fields()[13].schema(), other.vehicleName);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.insuranceDetails)) {
        this.insuranceDetails = data().deepCopy(fields()[14].schema(), other.insuranceDetails);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.manufacturingYear)) {
        this.manufacturingYear = data().deepCopy(fields()[15].schema(), other.manufacturingYear);
        fieldSetFlags()[15] = true;
      }
    }

    /**
      * Gets the value of the 'empId' field.
      * @return The value.
      */
    public java.lang.Integer getEmpId() {
      return empId;
    }

    /**
      * Sets the value of the 'empId' field.
      * @param value The value of 'empId'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setEmpId(int value) {
      validate(fields()[0], value);
      this.empId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'empId' field has been set.
      * @return True if the 'empId' field has been set, false otherwise.
      */
    public boolean hasEmpId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'empId' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearEmpId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }

    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.firstName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }

    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.lastName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public java.lang.Float getAge() {
      return age;
    }

    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setAge(float value) {
      validate(fields()[3], value);
      this.age = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearAge() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'sex' field.
      * @return The value.
      */
    public java.lang.CharSequence getSex() {
      return sex;
    }

    /**
      * Sets the value of the 'sex' field.
      * @param value The value of 'sex'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setSex(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.sex = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'sex' field has been set.
      * @return True if the 'sex' field has been set, false otherwise.
      */
    public boolean hasSex() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'sex' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearSex() {
      sex = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'houseName' field.
      * @return The value.
      */
    public java.lang.CharSequence getHouseName() {
      return houseName;
    }

    /**
      * Sets the value of the 'houseName' field.
      * @param value The value of 'houseName'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setHouseName(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.houseName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'houseName' field has been set.
      * @return True if the 'houseName' field has been set, false otherwise.
      */
    public boolean hasHouseName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'houseName' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearHouseName() {
      houseName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'streetName' field.
      * @return The value.
      */
    public java.lang.CharSequence getStreetName() {
      return streetName;
    }

    /**
      * Sets the value of the 'streetName' field.
      * @param value The value of 'streetName'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setStreetName(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.streetName = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'streetName' field has been set.
      * @return True if the 'streetName' field has been set, false otherwise.
      */
    public boolean hasStreetName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'streetName' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearStreetName() {
      streetName = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public java.lang.CharSequence getCity() {
      return city;
    }

    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.city = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearCity() {
      city = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'postcode' field.
      * @return The value.
      */
    public java.lang.Float getPostcode() {
      return postcode;
    }

    /**
      * Sets the value of the 'postcode' field.
      * @param value The value of 'postcode'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setPostcode(float value) {
      validate(fields()[8], value);
      this.postcode = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'postcode' field has been set.
      * @return True if the 'postcode' field has been set, false otherwise.
      */
    public boolean hasPostcode() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'postcode' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearPostcode() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'district' field.
      * @return The value.
      */
    public java.lang.CharSequence getDistrict() {
      return district;
    }

    /**
      * Sets the value of the 'district' field.
      * @param value The value of 'district'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setDistrict(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.district = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'district' field has been set.
      * @return True if the 'district' field has been set, false otherwise.
      */
    public boolean hasDistrict() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'district' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearDistrict() {
      district = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public java.lang.CharSequence getState() {
      return state;
    }

    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setState(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.state = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearState() {
      state = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'country' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountry() {
      return country;
    }

    /**
      * Sets the value of the 'country' field.
      * @param value The value of 'country'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.country = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'country' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearCountry() {
      country = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleNumber' field.
      * @return The value.
      */
    public java.lang.Float getVehicleNumber() {
      return vehicleNumber;
    }

    /**
      * Sets the value of the 'vehicleNumber' field.
      * @param value The value of 'vehicleNumber'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setVehicleNumber(float value) {
      validate(fields()[12], value);
      this.vehicleNumber = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleNumber' field has been set.
      * @return True if the 'vehicleNumber' field has been set, false otherwise.
      */
    public boolean hasVehicleNumber() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'vehicleNumber' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearVehicleNumber() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleName' field.
      * @return The value.
      */
    public java.lang.CharSequence getVehicleName() {
      return vehicleName;
    }

    /**
      * Sets the value of the 'vehicleName' field.
      * @param value The value of 'vehicleName'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setVehicleName(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.vehicleName = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleName' field has been set.
      * @return True if the 'vehicleName' field has been set, false otherwise.
      */
    public boolean hasVehicleName() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'vehicleName' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearVehicleName() {
      vehicleName = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'insuranceDetails' field.
      * @return The value.
      */
    public java.lang.CharSequence getInsuranceDetails() {
      return insuranceDetails;
    }

    /**
      * Sets the value of the 'insuranceDetails' field.
      * @param value The value of 'insuranceDetails'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setInsuranceDetails(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.insuranceDetails = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'insuranceDetails' field has been set.
      * @return True if the 'insuranceDetails' field has been set, false otherwise.
      */
    public boolean hasInsuranceDetails() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'insuranceDetails' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearInsuranceDetails() {
      insuranceDetails = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'manufacturingYear' field.
      * @return The value.
      */
    public java.lang.Float getManufacturingYear() {
      return manufacturingYear;
    }

    /**
      * Sets the value of the 'manufacturingYear' field.
      * @param value The value of 'manufacturingYear'.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder setManufacturingYear(float value) {
      validate(fields()[15], value);
      this.manufacturingYear = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'manufacturingYear' field has been set.
      * @return True if the 'manufacturingYear' field has been set, false otherwise.
      */
    public boolean hasManufacturingYear() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'manufacturingYear' field.
      * @return This builder.
      */
    public com.services.streamsDemo.avro.schema.EmpFullDetails.Builder clearManufacturingYear() {
      fieldSetFlags()[15] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EmpFullDetails build() {
      try {
        EmpFullDetails record = new EmpFullDetails();
        record.empId = fieldSetFlags()[0] ? this.empId : (java.lang.Integer) defaultValue(fields()[0]);
        record.firstName = fieldSetFlags()[1] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.lastName = fieldSetFlags()[2] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.age = fieldSetFlags()[3] ? this.age : (java.lang.Float) defaultValue(fields()[3]);
        record.sex = fieldSetFlags()[4] ? this.sex : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.houseName = fieldSetFlags()[5] ? this.houseName : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.streetName = fieldSetFlags()[6] ? this.streetName : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.city = fieldSetFlags()[7] ? this.city : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.postcode = fieldSetFlags()[8] ? this.postcode : (java.lang.Float) defaultValue(fields()[8]);
        record.district = fieldSetFlags()[9] ? this.district : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.state = fieldSetFlags()[10] ? this.state : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.country = fieldSetFlags()[11] ? this.country : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.vehicleNumber = fieldSetFlags()[12] ? this.vehicleNumber : (java.lang.Float) defaultValue(fields()[12]);
        record.vehicleName = fieldSetFlags()[13] ? this.vehicleName : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.insuranceDetails = fieldSetFlags()[14] ? this.insuranceDetails : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.manufacturingYear = fieldSetFlags()[15] ? this.manufacturingYear : (java.lang.Float) defaultValue(fields()[15]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EmpFullDetails>
    WRITER$ = (org.apache.avro.io.DatumWriter<EmpFullDetails>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EmpFullDetails>
    READER$ = (org.apache.avro.io.DatumReader<EmpFullDetails>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
